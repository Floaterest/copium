#!/usr/bin/python3

import os, sys, argparse
from codecs import open

def convert(url: str):
    parts = url.removeprefix('https://').removesuffix('/').split('/')
    domain = parts[0]
    match parts:
        case ['codeforces.com', _, contest, _, task]:
            return [domain, contest, f'{contest}_{task}']
        case ['atcoder.jp', _, contest, _, task]:
            return [domain, contest, task]
        case ['leetcode.com', _, problem]:
            return [domain, '', problem]
        case _:
            exit('Unknown url: ' + '/'.join(parts))

def main(args):
    url = args.url.lower()
    domain, contest, task = convert(url)
    dest = os.path.join(domain, contest, task) + os.path.splitext(args.src)[1]
    if os.path.exists(dest):
        act, copy = 'update', '\033[93mReplace\033[00m'
    else:
        act, copy = 'add', '\033[92mCopy\033[00m'

    # copy file
    print(copy, args.src, '-->', dest)
    if args.dry:
        system = print
        ofstream = sys.stdout
    else:
        os.makedirs(os.path.dirname(dest), exist_ok=True)
        system = os.system
        ofstream = open(dest, 'w', 'utf8')

    with open(args.src, 'r', 'utf8') as ifstream:
        ofstream.write(f'// {url}\n')
        ofstream.write(ifstream.read())

    # git
    system(f'git add {dest}')
    cmd = f'git commit -m "{act}({contest} {task}) {args.comment}" -m "{url}"'
    system(cmd)


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('src', type=str, help='path to submission code')
    parser.add_argument('url', type=str, help='task url')
    parser.add_argument('--dry', '-d', action='store_true', help='dry run')
    parser.add_argument('comment', nargs='?', default='', help='comments')

    args = parser.parse_args()
    main(args)
